# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Feature {
  id: Cuid!
  tenantId: String!
  key: String!
  type: FeatureType!
  defaultValue: JSON!
  description: String
  createdAt: DateTime!
}

"""
A field whose value conforms to the standard cuid format as specified in https://github.com/ericelliott/cuid#broken-down
"""
scalar Cuid @specifiedBy(url: "https://github.com/ericelliott/cuid#broken-down")

enum FeatureType {
  INTEGER
  FLOAT
  STRING
  BOOLEAN
  JSON
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type FeatureInstance {
  id: Cuid!
  tenantId: String!
  featureId: Cuid!
  feature: Feature!
  value: JSON!
  createdAt: DateTime!
}

type PackageFeature {
  id: Cuid!
  tenantId: String!
  featureId: Cuid!
  feature: Feature!
  value: JSON!
  createdAt: DateTime!
  packageId: Cuid!
  package: Package!
}

type Package {
  id: Cuid!
  tenantId: String!
  parentPackage: Package
  parentPackageId: Cuid
  name: String!
  version: SemVer!
  features: [PackageFeature!]!
  description: String
  createdAt: DateTime!
  featuresInstances: [FeatureInstance!]!
}

"""A field whose value is a Semantic Version: https://semver.org"""
scalar SemVer

type CustomerFeature {
  id: Cuid!
  tenantId: String!
  featureId: Cuid!
  feature: Feature!
  value: JSON!
  createdAt: DateTime!
  customerId: Cuid!
  customer: Customer!
}

type Customer {
  id: Cuid!
  tenantId: String!
  organizationId: String
  name: String!
  package: Package
  packageId: String
  features: [CustomerFeature!]!
  createdAt: DateTime!
}

type Organization {
  id: String!
  name: String!
}

type Query {
  features: [Feature!]!
  feature(id: String!): Feature!
  packages: [Package!]!
  package(id: String!): Package!
  customers: [Customer!]!
  customer(id: String!): Customer!
  organizations: [Organization!]!
  organization(id: String!): Organization!
}

type Mutation {
  createFeature(input: CreateFeatureInput!): Feature!
  updateFeature(input: UpdateFeatureInput!): Feature!
  removeFeature(id: String!): Feature!
  createPackage(input: CreatePackageInput!): Package!
  updatePackage(input: UpdatePackageInput!): Package!
  removePackage(id: String!): Package!
  createCustomer(input: CreateCustomerInput!): Customer!
  updateCustomer(input: UpdateCustomerInput!): Customer!
  removeCustomer(id: String!): Customer!
  createOrganization(createOrganizationInput: CreateOrganizationInput!): Organization!
  updateOrganization(updateOrganizationInput: UpdateOrganizationInput!): Organization!
  removeOrganization(id: String!): Organization!
}

input CreateFeatureInput {
  key: String!
  type: FeatureType!
  defaultValue: JSON!
  description: String
}

input UpdateFeatureInput {
  id: Cuid!
}

input CreatePackageInput {
  name: String!
  description: String
  parentPackageId: Cuid
  features: [FeatureInstanceInput!]!
}

input FeatureInstanceInput {
  featureId: Cuid!
  value: JSON!
}

input UpdatePackageInput {
  id: Cuid!
}

input CreateCustomerInput {
  organizationId: String
  name: String!
  packageId: String
  features: [FeatureInstanceInput!]!
}

input UpdateCustomerInput {
  organizationId: String
  name: String
  packageId: String
  features: [FeatureInstanceInput!]
  id: String!
}

input CreateOrganizationInput {
  name: String!
}

input UpdateOrganizationInput {
  name: String
  id: String!
}