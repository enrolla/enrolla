name: Publish Packages to NPM

on:
  push:
    branches:
      - 'publishable_package'

jobs:
  affected-packages:
    name: List affected publishable packages
    runs-on: ubuntu-latest
    outputs:
      affected: ${{ steps.set-affected.outputs.affected }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v3

      - uses: actions/setup-node@v3
        with:
          cache: 'npm'
          node-version-file: '.nvmrc'

      # see: https://github.com/actions/cache/blob/main/examples.md#node---npm
      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}

      - name: Cache NPM cache dir + node_modules
        id: npm-cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ steps.npm-cache-dir.outputs.dir }}
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install (on cache miss)
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Set Affected
        id: set-affected
        run: |
          export AFFECTED_PROJECTS=$(npx nx print-affected --target=publish --type=lib | jq -c .projects)
          echo affected projects: $AFFECTED_PROJECTS
          echo "affected=$AFFECTED_PROJECTS" >> $GITHUB_OUTPUT

  npm-publish:
    runs-on: ubuntu-latest
    needs: affected-packages
    strategy:
      matrix:
        project: ${{ fromJson(needs.affected-packages.outputs.affected) }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          cache: 'npm'
          node-version-file: '.nvmrc'
          registry-url: 'https://registry.npmjs.org'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}

      - name: Cache NPM cache dir + node_modules
        id: npm-cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ steps.npm-cache-dir.outputs.dir }}
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install (on cache miss)
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Test
        id: test
        run: npx nx run-many --target=test --projects=${{ matrix.project }}

      - name: Publish
        id: publish
        run: |
          echo publishing ${{ matrix.project }} to NPM
          npx nx run-many --target=publish --projects=${{ matrix.project }}
