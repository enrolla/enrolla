name: Publish docker image to ECR and deploy to staging

on:
  push:
    branches:
      - 'main'

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.change_log_create.outputs.tag }}
    steps:
      - uses: actions/checkout@v2

      - name: Conventional Changelog
        id: change_log_create
        uses: TriPSs/conventional-changelog-action@v3
        with:
          tag-prefix: ''
          git-user-name: ${{ github.event.pusher.name }}
          github-token: ${{ secrets.github_token }}
          git-user-email: ${{ github.event.pusher.email }}

  publish:
    needs: release
    if: ${{ needs.release.outputs.tag != '' }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
          role-to-assume: ${{ secrets.AWS_DEFAULT_ROLE }}
          role-session-name: GithubActions

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: customeric-server
          RELEASE_TAG: ${{ needs.release.outputs.tag }}
        run: |
          docker build . -t $REGISTRY/$REPOSITORY:$RELEASE_TAG -t $REGISTRY/$REPOSITORY:latest
          docker push $REGISTRY/$REPOSITORY:$RELEASE_TAG
          docker push $REGISTRY/$REPOSITORY:latest

  deploy:
    needs: [release, publish]
    if: ${{ needs.release.outputs.tag != '' }}
    runs-on: ubuntu-latest
    steps:
      - name: Install Octopus CLI
        uses: OctopusDeploy/install-octopus-cli-action@v1

      - name: Create and deploy release
        uses: OctopusDeploy/create-release-action@v1
        with:
          api_key: ${{ secrets.OCTOPUS_API_KEY }}
          server: ${{ secrets.OCTOPUS_SERVER }}
          space: ${{ secrets.OCTOPUS_SPACE }}
          project: 'customeric-server'
          deploy_to: 'Staging'
          release_number: ${{ needs.release.outputs.tag }}
